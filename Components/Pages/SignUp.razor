@page "/SignUp"
@inject NavigationManager Navigation
@inject AppDbContext DbContext

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudGrid Justify="Justify.Center" AlignItems="AlignItems.Center" Style="min-height: 100vh; margin-top: 50px;">
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Class="pa-6" Elevation="4" Style="border-radius: 10px; border: 2px solid #1976d2;">
            <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-2">Sign up</MudText>
            <MudText Typo="Typo.body2" Align="Align.Center" Class="mb-4">Sign up to continue</MudText>

            @if (showSuccessAlert)
            {
                <MudAlert Severity="Severity.Success" Class="mb-3">User registered successfully</MudAlert>
            }

            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudTextField T="string" Label="Name" Required="true" RequiredError="Name is required!" Class="mb-3" />
                <MudTextField T="string" Label="Email" Required="true" RequiredError="Email is required!"
                              Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })" Class="mb-3" />
                <MudTextField T="string" Label="Password" InputType="InputType.Password"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Required="true"
                              RequiredError="Password is required!" Class="mb-3" @ref="pwField1" />
                <MudTextField T="string" Label="Confirm Password" InputType="InputType.Password"
                              Validation="@(new Func<string, string>(PasswordMatch))" Required="true"
                              RequiredError="Please confirm your password" Class="mb-3" />
                <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Disabled="@(!success)"
                           Class="mt-3" OnClick="RegisterUser">
                    Sign up
                </MudButton>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    bool success;
    bool showSuccessAlert = false;
    string[] errors = { };
    MudTextField<string> pwField1;
    MudForm form;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least 8 characters long";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one uppercase letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one number";
    }

    private string PasswordMatch(string confirmPassword)
    {
        if (pwField1.Value != confirmPassword)
            return "Passwords don't match";
        return null;
    }

    private void RegisterUser()
    {
        if (form.IsValid)
        {
            // Registration logic can go here
            Navigation.NavigateTo("/");

            // Show success alert
            showSuccessAlert = true;

            // Simulate a delay before navigating to another page (if needed)
            // Here, we can keep the user on the same page for now.
        }
    }
}
